name: Build & Release Latest Kernel
on:
  schedule:
    - cron: '17 */12 * * *' # “At minute 17 past every 12th hour.”
  workflow_dispatch:

jobs:

  kver-checks:

    runs-on: ubuntu-latest

    outputs:
      latest_release: ${{ steps.latest_release.outputs.release }}
      latest_kernel: ${{ steps.versions.outputs.latest_kernel }}

    steps:
      # Get latest release in repo, so we compare its version
      # with the latest kernel available so far
      - name: Get latest release
        id: latest_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
        # it fails when there's no release
        continue-on-error: true

      - name: Checkout linux-tkg
        uses: actions/checkout@v4

      - name: Get latest kernel version
        id: versions
        run: |
          get_latest_kernel() {
            git -c 'versionsort.suffix=-' \
            ls-remote --exit-code --refs --sort='version:refname' --tags https://github.com/gregkh/linux.git '*.*' \
            | cut --delimiter='/' --fields=3 | grep "$1" | tail -n 1
          }

          grep "_current_kernels=(" linux-tkg-config/prepare > current_kernels.txt
          source current_kernels.txt

          latest_kernel=`get_latest_kernel "${_current_kernels[0]}"`
          if [[ "$latest_kernel" =~ "rc" ]]
          then
            latest_kernel=`get_latest_kernel "${_current_kernels[1]}"`
          fi

          echo "latest_kernel=$latest_kernel" >> $GITHUB_OUTPUT

  build:
    strategy:
      fail-fast: false
      matrix:
        _cpusched: [bore]
        os: [arch, fedora]
    uses: ./.github/workflows/builder-dispatcher.yml
    with:
      _cpusched: ${{ matrix._cpusched }}
      os: ${{ matrix.os }}

    needs: [kver-checks]
    if: needs.kver-checks.outputs.latest_kernel != needs.kver-checks.outputs.latest_release

  make-release:

    runs-on: ubuntu-latest

    needs:
      - kver-checks
      - build
    if: needs.build.result == 'success'

    steps:
      - name: Checkout linux-tkg
        uses: actions/checkout@v4

      - name: Download release artifacts
        uses: actions/download-artifact@v4

      - name: Make new release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          files_list=$(find *-kernel-packages-* -type f | paste -sd' ')
          gh release create ${{ needs.kver-checks.outputs.latest_kernel }} $files_list --latest \
          --title 'diet linux-tkg ${{ needs.kver-checks.outputs.latest_kernel }}' \
          --notes 'This is a version of linux-tkg built with the option `_kernel_on_diet` enabled.
          If you encounter issues with it, please build the kernel locally with that option disabled.'
